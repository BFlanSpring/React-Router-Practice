{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nconst SnackOrBoozeApi = {\n  async getSnacks() {\n    const response = await fetch(`${BASE_URL}/snacks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch snacks');\n    }\n    const snacks = await response.json();\n    return snacks;\n  },\n  async getDrinks() {\n    const response = await fetch(`${BASE_URL}/drinks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch drinks');\n    }\n    const drinks = await response.json();\n    return drinks;\n  },\n  async updateItemQuantity(itemType, itemId) {\n    try {\n      const response = await fetch(`${BASE_URL}/${itemType}/${itemId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          action: 'purchase'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update item quantity');\n      }\n      console.log('Item quantity updated successfully');\n      // If you need to process the response further, you can do it here\n      // const updatedItem = await response.json();\n      // return updatedItem;\n    } catch (error) {\n      console.error('Error updating item quantity:', error);\n      throw error; // Rethrow the error for handling in the component\n    }\n  }\n};\nexport default SnackOrBoozeApi;","map":{"version":3,"names":["BASE_URL","SnackOrBoozeApi","getSnacks","response","fetch","ok","Error","snacks","json","getDrinks","drinks","updateItemQuantity","itemType","itemId","method","headers","body","JSON","stringify","action","console","log","error"],"sources":["/Users/bradyflannery/Desktop/drinks/src/api.js"],"sourcesContent":["\nconst BASE_URL = 'http://localhost:3001';\n\nconst SnackOrBoozeApi = {\n  async getSnacks() {\n    const response = await fetch(`${BASE_URL}/snacks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch snacks');\n    }\n\n    const snacks = await response.json();\n    return snacks;\n  },\n\n  async getDrinks() {\n    const response = await fetch(`${BASE_URL}/drinks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch drinks');\n    }\n\n    const drinks = await response.json();\n    return drinks;\n  },\n\n  async updateItemQuantity(itemType, itemId) {\n    try {\n      const response = await fetch(`${BASE_URL}/${itemType}/${itemId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ action: 'purchase' }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update item quantity');\n      }\n      console.log('Item quantity updated successfully');\n      // If you need to process the response further, you can do it here\n      // const updatedItem = await response.json();\n      // return updatedItem;\n    } catch (error) {\n      console.error('Error updating item quantity:', error);\n      throw error; // Rethrow the error for handling in the component\n    }\n  },\n};\n\n\nexport default SnackOrBoozeApi;\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,eAAe,GAAG;EACtB,MAAMC,SAASA,CAAA,EAAG;IAChB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,CAAC;IAClD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC;EAED,MAAME,SAASA,CAAA,EAAG;IAChB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,CAAC;IAClD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOE,MAAM;EACf,CAAC;EAED,MAAMC,kBAAkBA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACzC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGY,QAAS,IAAGC,MAAO,EAAC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE;QAAW,CAAC;MAC7C,CAAC,CAAC;MACF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MACAc,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjD;MACA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAGD,eAAerB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}