{"ast":null,"code":"var _jsxFileName = \"/Users/bradyflannery/Desktop/drinks/src/ItemDetail.js\",\n  _s = $RefreshSig$();\n// // ItemDetail.js\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import SnackOrBoozeApi from './api';\n\n// const ItemDetail = ({ itemType }) => {\n//   const { id } = useParams(); // Use useParams to get the id parameter from the URL\n//   const [item, setItem] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     async function fetchItem() {\n//       try {\n//         const items = await (itemType === 'snacks'\n//           ? SnackOrBoozeApi.getSnacks()\n//           : SnackOrBoozeApi.getDrinks());\n\n//         const selectedItem = items.find((item) => item.id === id);\n\n//         setItem(selectedItem);\n//         setIsLoading(false);\n//       } catch (error) {\n//         console.error(`Error fetching ${itemType}:`, error);\n//         setIsLoading(false);\n//       }\n//     }\n\n//     fetchItem();\n//   }, [id, itemType]); // Include id and itemType in the dependency array\n\n//   if (isLoading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (!item) {\n//     return <p>Item not found</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>{item.name}</h2>\n//       <p>Description: {item.description}</p>\n//       <p>Recipe: {item.recipe}</p>\n//     </div>\n//   );\n// };\n\n// export default ItemDetail;\n\n// ItemDetail.js\n\n// ItemDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SnackOrBoozeApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemDetail = ({\n  itemType\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [item, setItem] = useState(null);\n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const itemData = await SnackOrBoozeApi.getItem(itemType, id);\n        setItem(itemData);\n      } catch (error) {\n        console.error(`Error fetching ${itemType} details:`, error);\n      }\n    }\n    fetchItem();\n  }, [itemType, id]);\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render details of the item (item.name, item.description, item.recipe, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Recipe: \", item.recipe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemDetail, \"iRjOJMVvKTWuLs4KfjrOxrJFkvw=\", false, function () {\n  return [useParams];\n});\n_c = ItemDetail;\nexport default ItemDetail;\nvar _c;\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","SnackOrBoozeApi","jsxDEV","_jsxDEV","ItemDetail","itemType","_s","id","item","setItem","fetchItem","itemData","getItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","recipe","_c","$RefreshReg$"],"sources":["/Users/bradyflannery/Desktop/drinks/src/ItemDetail.js"],"sourcesContent":["// // ItemDetail.js\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import SnackOrBoozeApi from './api';\n\n// const ItemDetail = ({ itemType }) => {\n//   const { id } = useParams(); // Use useParams to get the id parameter from the URL\n//   const [item, setItem] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     async function fetchItem() {\n//       try {\n//         const items = await (itemType === 'snacks'\n//           ? SnackOrBoozeApi.getSnacks()\n//           : SnackOrBoozeApi.getDrinks());\n\n//         const selectedItem = items.find((item) => item.id === id);\n\n//         setItem(selectedItem);\n//         setIsLoading(false);\n//       } catch (error) {\n//         console.error(`Error fetching ${itemType}:`, error);\n//         setIsLoading(false);\n//       }\n//     }\n\n//     fetchItem();\n//   }, [id, itemType]); // Include id and itemType in the dependency array\n\n//   if (isLoading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (!item) {\n//     return <p>Item not found</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>{item.name}</h2>\n//       <p>Description: {item.description}</p>\n//       <p>Recipe: {item.recipe}</p>\n//     </div>\n//   );\n// };\n\n// export default ItemDetail;\n\n// ItemDetail.js\n\n// ItemDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SnackOrBoozeApi from './api';\n\nconst ItemDetail = ({ itemType }) => {\n  const { id } = useParams();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const itemData = await SnackOrBoozeApi.getItem(itemType, id);\n        setItem(itemData);\n      } catch (error) {\n        console.error(`Error fetching ${itemType} details:`, error);\n      }\n    }\n\n    fetchItem();\n  }, [itemType, id]);\n\n  if (!item) {\n    return <p>Loading...</p>;\n  }\n\n  // Render details of the item (item.name, item.description, item.recipe, etc.)\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <p>{item.description}</p>\n      <p>Recipe: {item.recipe}</p>\n      {/* Add more details based on your data structure */}\n    </div>\n  );\n};\n\nexport default ItemDetail;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeW,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,eAAe,CAACW,OAAO,CAACP,QAAQ,EAAEE,EAAE,CAAC;QAC5DE,OAAO,CAACE,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAE,kBAAiBR,QAAS,WAAU,EAAEQ,KAAK,CAAC;MAC7D;IACF;IAEAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,QAAQ,EAAEE,EAAE,CAAC,CAAC;EAElB,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOL,OAAA;MAAAY,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;;EAEA;;EAEA,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKP,IAAI,CAACY;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBhB,OAAA;MAAAY,QAAA,EAAIP,IAAI,CAACa;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA;MAAAY,QAAA,GAAG,UAAQ,EAACP,IAAI,CAACc,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BIF,UAAU;EAAA,QACCJ,SAAS;AAAA;AAAAuB,EAAA,GADpBnB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}