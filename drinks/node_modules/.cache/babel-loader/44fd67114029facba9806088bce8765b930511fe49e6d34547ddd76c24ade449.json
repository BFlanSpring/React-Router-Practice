{"ast":null,"code":"var _jsxFileName = \"/Users/bradyflannery/Desktop/drinks/src/ItemDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SnackOrBoozeApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemDetail = () => {\n  _s();\n  const {\n    itemType,\n    id\n  } = useParams(); // Use useParams to get the id parameter from the URL\n  const [item, setItem] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const items = await (itemType === 'snacks' ? SnackOrBoozeApi.getSnacks() : SnackOrBoozeApi.getDrinks());\n        console.log('Fetched items:', items);\n        const selectedItem = items.find(item => item.id === id);\n        console.log('Selected item:', selectedItem);\n        setItem(selectedItem);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(`Error fetching ${itemType}:`, error);\n        setIsLoading(false);\n      }\n    }\n    fetchItem();\n  }, [id, itemType]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Item not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", item.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Recipe: \", item.recipe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemDetail, \"4239yYyzHb26O4sNZIvF9pKVNKY=\", false, function () {\n  return [useParams];\n});\n_c = ItemDetail;\nexport default ItemDetail;\nvar _c;\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","SnackOrBoozeApi","jsxDEV","_jsxDEV","ItemDetail","_s","itemType","id","item","setItem","isLoading","setIsLoading","fetchItem","items","getSnacks","getDrinks","console","log","selectedItem","find","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","recipe","_c","$RefreshReg$"],"sources":["/Users/bradyflannery/Desktop/drinks/src/ItemDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SnackOrBoozeApi from './api';\n\nconst ItemDetail = () => {\n  const { itemType, id } = useParams(); // Use useParams to get the id parameter from the URL\n  const [item, setItem] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const items = await (itemType === 'snacks'\n          ? SnackOrBoozeApi.getSnacks()\n          : SnackOrBoozeApi.getDrinks());\n  \n        console.log('Fetched items:', items);\n  \n        const selectedItem = items.find((item) => item.id === id);\n        console.log('Selected item:', selectedItem);\n  \n        setItem(selectedItem);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(`Error fetching ${itemType}:`, error);\n        setIsLoading(false);\n      }\n    }\n  \n    fetchItem();\n  }, [id, itemType]);\n  \n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!item) {\n    return <p>Item not found</p>;\n  }\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <p>Description: {item.description}</p>\n      <p>Recipe: {item.recipe}</p>\n    </div>\n  );\n};\n\nexport default ItemDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,eAAea,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,KAAK,GAAG,OAAOP,QAAQ,KAAK,QAAQ,GACtCL,eAAe,CAACa,SAAS,CAAC,CAAC,GAC3Bb,eAAe,CAACc,SAAS,CAAC,CAAC,CAAC;QAEhCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;QAEpC,MAAMK,YAAY,GAAGL,KAAK,CAACM,IAAI,CAAEX,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC;QACzDS,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;QAE3CT,OAAO,CAACS,YAAY,CAAC;QACrBP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAE,kBAAiBd,QAAS,GAAE,EAAEc,KAAK,CAAC;QACnDT,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,EAAE,EAAED,QAAQ,CAAC,CAAC;EAElB,IAAII,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI,CAACjB,IAAI,EAAE;IACT,oBAAOL,OAAA;MAAAkB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAKb,IAAI,CAACkB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBtB,OAAA;MAAAkB,QAAA,GAAG,eAAa,EAACb,IAAI,CAACmB,WAAW;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCtB,OAAA;MAAAkB,QAAA,GAAG,UAAQ,EAACb,IAAI,CAACoB,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CID,UAAU;EAAA,QACWJ,SAAS;AAAA;AAAA6B,EAAA,GAD9BzB,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}