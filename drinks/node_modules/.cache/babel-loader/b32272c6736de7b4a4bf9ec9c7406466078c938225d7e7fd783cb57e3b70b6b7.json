{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nconst SnackOrBoozeApi = {\n  async getSnacks() {\n    const response = await fetch(`${BASE_URL}/snacks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch snacks');\n    }\n    const snacks = await response.json();\n    return snacks;\n  },\n  async getDrinks() {\n    const response = await fetch(`${BASE_URL}/drinks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch drinks');\n    }\n    const drinks = await response.json();\n    return drinks;\n  },\n  async updateItemQuantity(itemType, itemId) {\n    const response = await fetch(`${BASE_URL}/${itemType}/${itemId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        action: 'purchase'\n      }) // Include any additional data needed for the update\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update item quantity');\n    }\n    // If you need to process the response further, you can do it here\n    // const updatedItem = await response.json();\n    // return updatedItem;\n  }\n};\nexport default SnackOrBoozeApi;","map":{"version":3,"names":["BASE_URL","SnackOrBoozeApi","getSnacks","response","fetch","ok","Error","snacks","json","getDrinks","drinks","updateItemQuantity","itemType","itemId","method","headers","body","JSON","stringify","action"],"sources":["/Users/bradyflannery/Desktop/drinks/src/api.js"],"sourcesContent":["\nconst BASE_URL = 'http://localhost:3001';\n\nconst SnackOrBoozeApi = {\n  async getSnacks() {\n    const response = await fetch(`${BASE_URL}/snacks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch snacks');\n    }\n\n    const snacks = await response.json();\n    return snacks;\n  },\n\n  async getDrinks() {\n    const response = await fetch(`${BASE_URL}/drinks`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch drinks');\n    }\n\n    const drinks = await response.json();\n    return drinks;\n  },\n  async updateItemQuantity(itemType, itemId) {\n    const response = await fetch(`${BASE_URL}/${itemType}/${itemId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ action: 'purchase' }), // Include any additional data needed for the update\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update item quantity');\n    }\n    // If you need to process the response further, you can do it here\n    // const updatedItem = await response.json();\n    // return updatedItem;\n  },\n};\n\n\nexport default SnackOrBoozeApi;\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,eAAe,GAAG;EACtB,MAAMC,SAASA,CAAA,EAAG;IAChB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,CAAC;IAClD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC;EAED,MAAME,SAASA,CAAA,EAAG;IAChB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,CAAC;IAClD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOE,MAAM;EACf,CAAC;EACD,MAAMC,kBAAkBA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACzC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGY,QAAS,IAAGC,MAAO,EAAC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAW,CAAC,CAAC,CAAE;IAChD,CAAC,CAAC;IACF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IACnD;IACA;IACA;IACA;EACF;AACF,CAAC;AAGD,eAAeL,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}